ТЕСТЫ С МЕТОДОМ "GET"

1. Получение списка книг
    Precondition:
    Steps: - Отправить GET запрос http://localhost:5000/api/books
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 200
                     - В теле ответа содержится список всех книг

2. Получение книги по ID
    Precondition:
    Steps: - Отправить GET запрос http://localhost:5000/api/books/1
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 200
                     - В теле ответа содержится информация о книге с ID 1

3. Запрос книги с несуществующим ID
    Precondition:
    Steps: - Отправить GET запрос http://localhost:5000/api/books/1555
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 404
                     - Тело ответа содержит ошибку { "error": "Book with id 1555 not found" }

4. Запрос ID книги с буквенным значением
    Precondition:
    Steps: - Отправить GET запрос http://localhost:5000/api/books/bb
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 404

ТЕСТЫ С МЕТОДОМ POST

1. Добавление новой книги
    Precondition:
    Steps: - Отправить POST запрос http://localhost:5000/api/books
             c телом, в котором заполнено только поле "name":
             {
                 "author": null,
                 "id": 0,
                 "isElectronicBook": false,
                 "name": "Теория всего",
                 "year": 0
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 201
                     - В теле ответа содержится добавленная книга с присвоенным ID

2. Добавление новой книги с аналогичными параметрами
    Precondition:
    Steps: - Отправить POST запрос http://localhost:5000/api/books
             c телом, в котором заполнено только поле "name":
             {
                 "author": null,
                 "id": 0,
                 "isElectronicBook": false,
                 "name": "Теория всего",
                 "year": 0
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 404

3. Добавление новой книги со всеми заполненными полями
    Precondition:
    Steps: - Отправить POST запрос http://localhost:5000/api/books
             c телом, в котором заполнены все поля:
             {
                 "author": "Иван Петров",
                 "id": 0,
                 "isElectronicBook": true,
                 "name": "Рандомная книга",
                 "year": 1999
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 201
                     - В теле ответа содержится добавленная книга с присвоенным ID

4. Добавление книги без заполнения полей
    Precondition:
    Steps: - Отправить POST запрос http://localhost:5000/api/books
             c телом, в котором не заполнены все поля:
             {
                 "author": null,
                 "id": 0,
                 "isElectronicBook": false,
                 "name": null,
                 "year": 0
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 400

5. Добавление новой книги с английским названием
    Precondition:
    Steps: - Отправить POST запрос http://localhost:5000/api/books
             c телом, в котором заполнено только поле "name" на английском языке:
             {
                 "author": null,
                 "id": 0,
                 "isElectronicBook": false,
                 "name": "Random book",
                 "year": 0
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 201
                     - В теле ответа содержится добавленная книга с присвоенным ID

6. Добавление новой книги с заполненным ID
    Precondition:
    Steps: - Отправить POST запрос http://localhost:5000/api/books
             c телом, в котором заполнены поля "name" и "id":
             {
                 "author": null,
                 "id": 1999,
                 "isElectronicBook": false,
                 "name": "Random book",
                 "year": 0
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 400
                     - В теле ответа содержится ошибка

7. Добавление новой книги с отрицательным годом выпуска
    Precondition:
    Steps: - Отправить POST запрос http://localhost:5000/api/books
             c телом, в котором заполнены поля "name" и "year":
             {
                 "author": null,
                 "id": 0,
                 "isElectronicBook": false,
                 "name": "Random book",
                 "year": -1999
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 400
                     - В теле ответа содержится ошибка

8. Добавление новой книги с пустым значением
    Precondition:
    Steps: - Отправить POST запрос http://localhost:5000/api/books
             c пустым телом:
             {
                 "author": null,
                 "id": 0,
                 "isElectronicBook": false,
                 "name": null,
                 "year": 0
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 400
                     - В теле ответа содержится ошибка

ТЕСТЫ С МЕТОДОМ "PUT"

1. Обновление информации о книге
    Precondition:
    Steps: - Отправить PUT запрос http://localhost:5000/api/books/7
             c заполненным телом:
             {
                 "author": "Новый автор",
                 "id": 0,
                 "isElectronicBook": true,
                 "name": "Новое имя книги",
                 "year": 1800
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 200
                     - В теле ответа отображается книга с ID 7 и измененными данными

2. Обновление информации о книге, не указав автора
    Precondition:
    Steps: - Отправить PUT запрос http://localhost:5000/api/books/7
             c заполненным телом:
             {
                 "author": null,
                 "id": 0,
                 "isElectronicBook": true,
                 "name": "Новое имя книги",
                 "year": 1800
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 400
                     - Тело ответа содержит ошибку { "error": "Author must be String type (Unicode)" }

3. Обновление информации о книге, не указав название
    Precondition:
    Steps: - Отправить PUT запрос http://localhost:5000/api/books/7
             c заполненным телом:
             {
                 "author": "Новый автор",
                 "id": 0,
                 "isElectronicBook": true,
                 "name": null,
                 "year": 1800
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 400
                     - Тело ответа содержит ошибку { "error": "Name must be String type (Unicode)" }

4. Обновление информации о книге, не указав год
    Precondition:
    Steps: - Отправить PUT запрос http://localhost:5000/api/books/7
             c заполненным телом:
             {
                 "author": "Новый автор",
                 "id": 0,
                 "isElectronicBook": true,
                 "name": "Новое имя книги",
                 "year": 0
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 400
                     - Тело ответа содержит ошибку { "error": "Year must be Integer type" }

5. Обновление информации о книге, не указав тип книги
    Precondition:
    Steps: - Отправить PUT запрос http://localhost:5000/api/books/7
             c заполненным телом:
             {
                 "author": "Новый автор",
                 "id": 0,
                 "isElectronicBook": false,
                 "name": "Новое имя книги",
                 "year": 1800
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 400
                     - Тело ответа содержит ошибку { "error": "isElectronicBook must be boolean type" }

6. Обновление информации о книге с несуществующим ID
    Precondition:
    Steps: - Отправить PUT запрос http://localhost:5000/api/books/1999
             c заполненным телом:
             {
                 "author": "Новый автор",
                 "id": 0,
                 "isElectronicBook": true,
                 "name": "Новое имя книги",
                 "year": 1800
             }
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 400
                     - Тело ответа содержит ошибку { "error": "Book with id 1999 not found" }

ТЕСТЫ С МЕТОДОМ "DELETE"

1. Удаление книги
    Precondition:
    Steps: - Отправить DELETE запрос http://localhost:5000/api/books/33
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 200

2. Удаление книги с несуществующим ID
    Precondition:
    Steps: - Отправить DELETE запрос http://localhost:5000/api/books/1999
           - Проверить код состояния
           - Проверить тело ответа
    Expected Result: - Статус ответа 404
                     - Тело ответа содержит ошибку { "error": "Book with id 1999 not found" }
